---
import SearchIcon from '@tabler/icons/search.svg?sprite';
import Layout from '../layouts/layout.astro';
import UploadCard from '../components/media/upload-card.astro';
import { createClient } from '../util/server/gql';
import { cn } from '../util';
import { homepageQuery } from './_index.queries';
import type {
  HomepageDataQuery,
  HomepageDataQueryVariables,
} from './__generated__/_index.queries';

const client = await createClient(
  Astro.request.headers,
  Astro.cookies.get('lcSession')?.value,
);

const data = await client.request<
  HomepageDataQuery,
  HomepageDataQueryVariables
>(homepageQuery, { loggedIn: false });

const pathname = new URL(Astro.request.url).pathname;

const mediaLinks = [
  {
    href: '/',
    title: 'Explore',
    active: pathname === '/',
  },
  {
    href: '/channels',
    title: 'Channels',
    active: pathname.startsWith('/channels'),
  },
];
---

<Layout title="Free Christian Videos With No Ads">
  <div
    class="mx-auto mt-5 flex max-w-7xl flex-1 items-center justify-center lg:justify-between"
  >
    <div class="hidden sm:block">
      <nav class="hidden space-x-4 lg:flex" aria-label="Tabs">
        {
          mediaLinks.map((link) => (
            <a
              href={link.href}
              class={cn(
                'rounded-md px-3 py-2 text-sm font-medium',
                link.active
                  ? 'bg-gray-100 text-gray-700'
                  : 'text-gray-500 hover:text-gray-700',
              )}
            >
              {link.title}
            </a>
          ))
        }
      </nav>
    </div>
    <div class="w-full max-w-lg lg:max-w-xs">
      <label for="search" class="sr-only">Search Media</label>
      <div class="relative pr-3">
        <div
          class="pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3 text-gray-400 [&_svg]:h-6 [&_svg]:scale-75"
        >
          <Fragment set:html={SearchIcon} />
        </div>
        <input
          id="search"
          name="q"
          class="block w-full rounded-md border-0 bg-white py-1.5 pl-10 pr-3 text-gray-900 ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
          placeholder="Search Media"
          type="search"
        />
      </div>
    </div>
  </div>
  <div class="mx-auto max-w-7xl">
    <h3 class="mb-3 mt-5 text-lg font-semibold leading-6 text-gray-900">
      Trending
    </h3>
    <ul
      class="grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4"
    >
      {
        data.trendingUploads.edges.map((edge) => (
          <li>
            <UploadCard href={`/media/${edge.node.id}`} data={edge.node} />
          </li>
        ))
      }
    </ul>
  </div>
</Layout>
