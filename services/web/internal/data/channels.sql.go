// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: channels.sql

package data

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const subscribeToChannelBySlug = `-- name: SubscribeToChannelBySlug :exec
WITH channel AS (
  SELECT id AS channel_id 
  FROM channel c 
  WHERE c.slug = $2
)
INSERT INTO channel_subscription (app_user_id, channel_id)
SELECT $1, channel_id FROM channel
ON CONFLICT (app_user_id, channel_id) 
DO NOTHING
`

type SubscribeToChannelBySlugParams struct {
	UserID pgtype.UUID
	Slug   pgtype.Text
}

func (q *Queries) SubscribeToChannelBySlug(ctx context.Context, arg SubscribeToChannelBySlugParams) error {
	_, err := q.db.Exec(ctx, subscribeToChannelBySlug, arg.UserID, arg.Slug)
	return err
}

const unsubscribeFromChannelBySlug = `-- name: UnsubscribeFromChannelBySlug :exec
WITH channel AS (
  SELECT id AS channel_id 
  FROM channel c
  WHERE c.slug = $2
)
DELETE FROM channel_subscription
WHERE app_user_id = $1 AND channel_id = (SELECT channel_id FROM channel)
`

type UnsubscribeFromChannelBySlugParams struct {
	UserID pgtype.UUID
	Slug   pgtype.Text
}

func (q *Queries) UnsubscribeFromChannelBySlug(ctx context.Context, arg UnsubscribeFromChannelBySlugParams) error {
	_, err := q.db.Exec(ctx, unsubscribeFromChannelBySlug, arg.UserID, arg.Slug)
	return err
}
